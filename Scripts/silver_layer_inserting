INSERT INTO silver.crm_cust_info(
	cst_id,
	cst_key,
	cst_firstname,
	cst_lastname,
	cst_marital_status,
	cst_gndr,
	cst_create_date)

SELECT
	cst_id,
	cst_key,
	UPPER(TRIM(cst_firstname)) as cst_firstname,
	UPPER(TRIM(cst_lastname)) as cst_lastname,
CASE WHEN UPPER(TRIM(cst_marital_status)) = 'S' then 'Single'
WHEN UPPER(TRIM(cst_marital_status)) = 'M' then 'Married'
ELSE 'N/A'
END cst_marital_status,
CASE WHEN UPPER(TRIM(cst_gndr)) = 'F' then 'FEMALE'
WHEN UPPER(TRIM(cst_gndr)) = 'M' then 'MALE'
ELSE 'N/A'
END cst_gndr,

cst_create_date
FROM
( SELECT *, 
ROW_NUMBER() OVER (PARTITION BY cst_id order by cst_create_date DESC) as FLAG_last
FROM bronze.crm_cust_info
where cst_id is not null ) t
WHERE FLAG_last = 1;


INSERT INTO silver.crm_prd_info (
    prd_id,         
    cat_id,          
    prd_key,         
    prd_nm,        
    prd_cost,        
    prd_line ,       
    prd_start_dt,    
    prd_end_dt )
	
SELECT
	prd_id,
	replace(substring(prd_key,1,5), '-','_') as cat_id,
	SUBSTRING(prd_key,7,len(prd_key)) as prd_key,
	prd_nm,
	ISNULL(prd_cost,0) as prd_cost,
CASE WHEN UPPER(TRIM(prd_line)) = 'M' THEN 'Mountain'
WHEN UPPER(TRIM(prd_line)) = 'R' THEN 'Road'
WHEN UPPER(TRIM(prd_line)) = 'S' THEN 'Other Sales'
WHEN UPPER(TRIM(prd_line)) = 'S' THEN 'Touring'
ELSE 'n/a'
ENd AS prd_line,
	cast(prd_start_dt as DATE) AS prd_tart_dt,
    cast(LEAD(prd_start_dt) over (PARTITION BY prd_key order by prd_start_dt)- 1 as DATE) as prd_end_dt
from bronze.crm_prd_info



INSERT INTO silver.crm_sales_details (
    sls_ord_num,     
    sls_prd_key,     
    sls_cust_id,
    sls_order_dt,
    sls_ship_dt,
    sls_due_dt,
    sls_sales,
    sls_quantity,
    sls_price
)
SELECT 
    sls_ord_num,     
    sls_prd_key,     
    sls_cust_id,
    CASE 
        WHEN sls_order_dt = 0 OR LEN(sls_order_dt) != 8 THEN NULL 
        ELSE CAST(CAST(sls_order_dt AS VARCHAR) AS DATE) 
    END AS sls_order_dt, 
    CASE 
        WHEN sls_ship_dt = 0 OR LEN(sls_ship_dt) != 8 THEN NULL 
        ELSE CAST(CAST(sls_ship_dt AS VARCHAR) AS DATE) 
    END AS sls_ship_dt, 
    CASE 
        WHEN sls_due_dt = 0 OR LEN(sls_due_dt) != 8 THEN NULL 
        ELSE CAST(CAST(sls_due_dt AS VARCHAR) AS DATE) 
    END AS sls_due_dt, 
    CASE 
        WHEN sls_sales IS NULL OR sls_sales <= 0 OR sls_sales != sls_quantity * ABS(sls_price) 
        THEN sls_quantity * ABS(sls_price)
        ELSE sls_sales
    END AS sls_sales,
    sls_quantity,
    CASE 
        WHEN sls_price IS NULL OR sls_price <= 0 
        THEN sls_sales / NULLIF(sls_quantity, 0) 
        ELSE sls_price 
    END AS sls_price      
FROM bronze.crm_sales_details;

SELECT 
    NULLIF(sls_due_dt, 0) AS sls_due_dt 
FROM bronze.crm_sales_details
WHERE sls_due_dt <= 0 
    OR LEN(sls_due_dt) != 8 

INSERT INTO silver.erp_cust_az12 (cid,bdate,gen) 
SELECT
CASE WHEN cid LIKE 'NAS%' THEN SUBSTRING(cid,4,len(cid))
ELSE  cid
end cid,
CASE WHEN bdate> GETDATE() THEN NULL 
ELSE  bdate
end as bdate,
CASE WHEN UPPER(TRIM(gen)) in( 'F','FEMALE') then 'FEMALE'
WHEN UPPER(TRIM(gen)) in ('M', 'MALE') then 'MALE'
ELSE 'N/A'
END AS gen
FROM bronze.erp_cust_az12


INSERT INTO silver.erp_loc_a101 (cid, cntry)
select 
replace(cid,'-','') cid,
CASE WHEN TRIM(cntry) = 'DE' THEN 'Germany'
 WHEN TRIM(cntry) in ('US', 'USA') THEN 'United States'
 WHEN TRIM(cntry) = '' or cntry is NULL THEN 'n/a'
ELSE cntry
END AS cntry
from bronze.erp_loc_a101

INSERT INTO silver.erp_px_cat_g1v2(id,
cat,
subcat,
maintenance)
SELECT
id,
cat,
subcat,
maintenance
from bronze.erp_px_cat_g1v2
